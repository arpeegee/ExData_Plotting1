download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv",
destfile = "./GDP.csv")
download.file(url = "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv",
destfile = "./EDSTATS_Country.csv")
data_q3a <- read.csv("./GDP.csv")
data_q3b <- read.csv("./EDSTATS_Country.csv")
vector <- data_q3a$X %in% data_q3b$CountryCode
table(vector)
merged <- merge(x = data_q3a, y = data_q3b,
by.x = "X", by.y = "CountryCode")
data_sorted <- data_q3a[sort(data_q3a$Gross.domestic.product.2012, decreasing = TRUE),]
head(data_sorted, n=14)
head(data4)
head(data4$Special.Notes)
data4$Special.Notes
result4 <- length(grep("[Jj]une",as.character(data4$Special.Notes), value = TRUE))
result4
grep("[Jj]une",as.character(data4$Special.Notes), value = TRUE)
result4 <- length(grep("Fiscal year end: [Jj]une",as.character(data4$Special.Notes), value = TRUE))
result4
grep("Fiscal year end: [Jj]une",as.character(data4$Special.Notes))
data4[grep("Fiscal year end: [Jj]une",as.character(data4$Special.Notes)),]
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
class(amzn)
head(amzn)
head(sampleTimes)
class(sampleTimes)
result5a <- length(grep("2012",sampleTimes))
result5a
format(sampleTimes)
sampleTimesDay <- format(x = sampleTimes, "%Y-%m-%d %a")
head(sampleTimes)
head(sampleTimesDay)
?gre
?grep
class(grep("2012",sampleTimesDay))
grep("2012",sampleTimesDay)
result5b <- length(grep("Mo",sampleTimesDay[grep("2012",sampleTimesDay)]))
result5b
colors()
swirl()
library(swirl)
swirl()
install_from_swirl("Exploratory Data Analysis")
swirl()
install.packages("ggplot2")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(x = ppm, col = "blue")
abline(h = 12)
hist(x = ppm, col = "green")
rug(x = ppm)
rug(low)
low
high
hist(x = ppm, col = "green", breaks = 100)
rug(ppm)
hist(x = ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
reg <- table(pollution$region)
reg
barplot(height = reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(x = pm25~region, data = pollution, col = "red")
boxplot(formula = pm25~region, data = pollution, col = "red")
par(mfrow = c(2, 1), mar = c(4, 4, 2, 1))
east <- subset(x = pollution, subset = (region == east))
east <- subset(x = pollution, subset = (region == "east"))
east <- subset(x = pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(data = pollution, expr = plot)
with(data = pollution, expr = plot(x = latitude, y = pm25))
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(x = pollution$latitude, y = pollution$pm25, col = pollution$region)
plot(x = pollution$latitude, y = ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5, 4, 2, 1))
west <- subset(x = pollution, region == "west")
plot(x = west$latitude, y = west$pm25, main = "West")
plot(x = east$latitude, y = east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
getwd()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main="Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
swirl()
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, data = airquality)
boxplot(Ozone ~ Month, data = airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.label = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.label = "red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.label="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone
| (ppb)",col.axis="blue",col.lab="red")
boxplot(Ozone~Month, airquality, xlab="Month", ylab="Ozone (ppb)",col.axis="blue",col.lab="red")
title(main = "Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone, type = "n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, Month = 5)
may <- subset(airquality, Month == 5)
points(may$Wind, may$Ozone, pch=17, col="blue")
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, pch=8, col="red")
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
lines(x = median(airquality$Wind), lty=2, lwd=2)
abline(x = median(airquality$Wind), lty=2, lwd=2)
abline(v = median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
par(mfrow = c(1, 3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main="Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=TRUE)
setwd("/Users/romangaechter/wd/datascience/04_Exploratory_Data_Analysis/Assignment_01/")
getwd()
ls()
ls
getwd()
setwd("/Users/romangaechter/wd/datascience/04_Exploratory_Data_Analysis/Assignment_01/ExData_Plotting1/")
getwd()
data <- read.csv(file = "./household_power_consumption.txt")
dataurl <- "https://d396qusza40orc.cloudfront.net/exdata/data/household_power_consumption.zip"
download.file(url=dataurl",
destfile = "./data/household_power_consumption.zip")
download.file(url=dataurl,
destfile = "./data/household_power_consumption.zip")
dateDownloaded <- date()
head(data)
data <- read.csv(file = "./data/household_power_consumption.zip")
?uzip
?unz
test <- unz("./data/household_power_consumption.zip")
test <- unz("./data/household_power_consumption.zip", filename="./data/hpc.txt")
head(test)
unzipped <- unz(description = "./data/household_power_consumption.zip",
filename = "household_power_consumption.txt")
head(unzipped)
unzipped
?unzip
unzipped <- unzip(zipfile = "./data/household_power_consumption.zip")
head(unzipped)
unzipped <- unzip(zipfile = "./data/household_power_consumption.zip",
exdir = ".data/")
unzipped <- unzip(zipfile = "./data/household_power_consumption.zip",
exdir = ".data")
unzipped <- unzip(zipfile = "./data/household_power_consumption.zip",
exdir = "data")
data <- read.csv(file = "./data/household_power_consumption.txt")
head(data)
dim(data)
?read.table
?read.csv
data <- read.csv(file = "./data/household_power_consumption.txt",
header = TRUE,
sep = ";")
dim(data)
head(data)
data <- read.csv(file = "./data/household_power_consumption.txt",
sep = ";")
head(data)
dim(data)
data$Date[2]
class(data$Date[2])
?strptime
strptime(data$Date[2])
as.Date(data$Date[2])
strptime(data$Date[2], format = "%d/%m/%Y")
class(strptime(data$Date[2], format = "%d/%m/%Y"))
as.Date(strptime(data$Date[2], format = "%d/%m/%Y"))
as.Date(strptime(data$Date, format = "%d/%m/%Y"))
data$Date <- as.Date(strptime(data$Date, format = "%d/%m/%Y"))
head(data)
class(data$Date[3])
class(data$Time[3])
as.Date(strptime(data$Time, format = "%H:%M:%S"))
strptime(data$Time[3], format = "%H:%M:%S")
class(strptime(data$Time[3], format = "%H:%M:%S"))
as.Date(data$Time[3])
?strptime
as.Date(strptime(data$Time[3], format = "%H:%M:%S"))
strptime(data$Time[3], format = "%H:%M:%S")
as.POSIXct(strptime(data$Time[3], format = "%H:%M:%S"))
date
date()
system.time()
head(data)
names(data)
hist(data$Global_reactive_power)
class(data$Global_reactive_power)
class(data$Global_reactive_power[5])
(data$Global_reactive_power[5])
as.numeric(data$Global_reactive_power[5])
?read.table
data2 <- read.table(file = "./data/household_power_consumption.txt",
sep = ";",
colClasses = c("Date", "Date", numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
head(data2)
data2 <- read.table(file = "./data/household_power_consumption.txt",
sep = ";",
colClasses = c("Date", numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
data2 <- read.table(file = "./data/household_power_consumption.txt",
sep = ";",
colClasses = c(factor, numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
data2 <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE
sep = ";",
colClasses = c(factor, numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
data2 <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE,
sep = ";",
colClasses = c(character, factor, numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
data2 <- read.table(file = "./data/household_power_consumption.txt",
header = TRUE,
sep = ";",
colClasses = c(factor, numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
data2 <- read.csv(file = "./data/household_power_consumption.txt",
sep = ";",
colClasses = c(factor, numeric, numeric, numeric, numeric,
numeric, numeric, numeric, numeric))
class(data[3,])
class(data[3,4])
class(data[3,1:9])
class(data[3,1])
class(data[3,2])
class(data[3,3])
class(data[3,4])
class(data[3,5])
class(data[3,6])
class(data[3,7])
class(data[3,8])
class(data[3,9])
class(data[3,10])
as.numeric(data$Global_active_power[3:5])
data$Global_active_power[3:5]
as.double(data$Global_active_power[3:5])
as.numeric(levels(data$Global_active_power[3:5]))[data$Global_active_power[3:5]]
data$Global_active_power[3:5]
data$Global_active_power <- as.numeric(levels(data$Global_active_power))[data$Global_active_power]
head(data)
hist(data$Global_active_power)
hist(x = data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red")
hist(x = data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6))
hist(x = data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 2, 4, 6))
par(mfrow = c(1,1))
hist(x = data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6))
hist(x = data$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200))
range(data$Date)
dim(data)
dim(subset(data, data$Date > "2007-02-01"))
dim(subset(data, data$Date > "2007-02-01" && data$Date < "2007-02-02"))
dim(subset(data, data$Date > "2007-02-01" | data$Date < "2007-02-02"))
dataToBeUsed <- subset(x = data, data$Date > "2007-02-01")
dataToBeUsed <- subset(x = dataToBeUsed, dataToBeUsed$Date < "2007-02-02")
dim(data)
dim(dataToBeUsed)
data$Date == "2007-02-01"
sum(data$Date == "2007-02-01")
sum(data$Date == "2007-02-02")
sum(data$Date == "2007-02-03")
dim(subset(data, data$Date >= "2007-02-01" && data$Date =< "2007-02-02"))
dim(subset(data, data$Date >= "2007-02-01"))
dataToBeUsed <- subset(x = data, data$Date >= "2007-02-01")
dataToBeUsed <- subset(x = dataToBeUsed, dataToBeUsed$Date <= "2007-02-02")
dim(data)
dim(dataToBeUsed)
dataToBeUsed <- subset(x = data, (data$Date >= "2007-02-01" && data$Date <= "2007-02-02")
dataToBeUsed <- subset(x = data, (data$Date >= "2007-02-01" && data$Date <= "2007-02-02"))
dim(dataToBeUsed)
dataToBeUsed <- subset(x = data, (data$Date >= "2007-02-01" & data$Date <= "2007-02-02"))
dim(dataToBeUsed)
dataToBeUsed <- subset(x = data,
(data$Date >= "2007-02-01" & data$Date <= "2007-02-02"))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
xact = "n")
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 200),
labels = seq(0, 1200, 200))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
#      xlim = c(0, 6),
#      ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 200),
labels = seq(0, 1200, 200))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 200),
labels = seq(0, 1200, 200))
axis(side = 2,
at = seq(0, 1200, 500),
labels = seq(0, 1200, 200))
axis(side = 2,
at = seq(0, 1200, 100),
labels = seq(0, 1200, 100))
axis(side = 2,
at = seq(0, 1200, 500),
labels = seq(0, 1200, 500))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 500),
labels = seq(0, 1200, 500))
seq(0, 1200, 200)
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 200),
labels = seq(0, 1200, 200))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = c(0, 200, 400, 600, 800, 1000, 1200),
labels = c(0, 200, 400, 600, 800, 1000, 1200))
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 400),
labels = seq(0, 1200, 400))
?dev.copy
cur.dev
dev.cur
dev.cur()
png(filename = "plot1.png", width = 480, height = 480)
?Devices
dev.cur()
?dev.off()
dev.list
dev.list()
dev.off(which = 3)
dev.off(which = 4)
list.dev()
dev.list()
dev.print(device = png(filename = "plot1.png",
width = 480,
height = 480))
?dev.print
getwd()
dev.cur()
dev.off()
dev.list()
hist(x = dataToBeUsed$Global_active_power,
main = "Global Active Power",
xlab = "Global Active Power (kilowatts)",
ylab = "Frequency",
col = "red",
xlim = c(0, 6),
ylim = c(0, 1200),
axes = FALSE)
axis(side = 1,
at = seq(0, 6, 2),
labels = seq(0, 6, 2))
axis(side = 2,
at = seq(0, 1200, 200),
labels = seq(0, 1200, 200))
dev.copy(png, file = "plot1.R")
dev.off()
dev.copy(png, file = "plot1.png")
dev.off()
?hist
